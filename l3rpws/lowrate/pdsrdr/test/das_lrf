#!/opt/local/bin/perl
#
# das_lrf -- an example perl script to invoke das without going through
# the web form cgi interface.
# The statements in "PrintCommon" can be modified for any combinations
# of readers and plot layouts.  This version is modified from tfa's
# "das.batch".
#
# usage:
# das_lrf 'tBegin' 'tEnd' yMin yMax zMin zMax sOrbitParm bgd RcvAnt 'title' 
#             0        1    2    3    4    5       6       7    8       9 
#

# Setup IDL environment
$gif_dir = `pwd`;
$idl_dir  = '/local/rsi/idl';
$ENV{'IDL_DIR'} = $idl_dir;
$ENV{'LD_LIBRARY_PATH'} = "/opt/SUNWspro/lib:/usr/openwin/lib:/usr/dt/lib:/local/lib:/opt/local/lib:/home/Web/das/idl";
#$ENV{'IDL_PATH'}  ="\+$idl_dir/lib";
#$ENV{'IDL_STARTUP'} = '' if $ENV{'IDL_STARTUP'};
#$ENV{'LD_LIBRARY_PATH'} = "/home/ljg/lib";


# Open pipe to IDL process

if (!open(PROG, "| /local/bin/idl 2> das_lrf.log")) {
  print STDERR "ERROR: Could not open pipe to IDL process\n";
  exit(1);
}

# get begin time, end time, and optional title from command line
if ($#ARGV < 1) {
  print STDERR "USAGE: $0 \'tBegin\' \'tEnd\' yMin yMax zMin zMax bgd RcvAnt \'title\' \n"; 
  exit (1);
}

$begtime = `/home/ljg/bin/ptime $ARGV[0]`; chop $begtime;
$endtime = `/home/ljg/bin/ptime $ARGV[1]`; chop $endtime;
$xtitle  = "\'$begtime    SCET    $endtime\'";

# das_lrf 'tBegin' 'tEnd' yMin yMax zMin zMax sOrbitParm bgd RcvAnt 'title' 
#             0        1    2    3    4    5       6       7    8       9 
$yMin=$ARGV[2];  $yMax=$ARGV[3];  $zMin=$ARGV[4];  $zMax=$ARGV[5];
$sOrbitParm=$ARGV[6];  $nBgd=$ARGV[7];  $sRcvAnt=$ARGV[8];  $sTitle=$ARGV[9];  
if( $sOrbitParm eq "V" )                     # "",cephemE,cephemS,cephemJ
  { $sOrbitParm = "galileo/pws/cephemV"; }
elsif( $sOrbitParm eq "E" )  
  { $sOrbitParm = "galileo/pws/cephemE"; }
elsif( $sOrbitParm eq "J" )  
  { $sOrbitParm = "galileo/pws/cephemJ"; }
elsif( $sOrbitParm eq "S" )  
  { $sOrbitParm = "galileo/pws/cephemS"; }
elsif( $sOrbitParm eq "H" )                  # Heliocentric
  { $sOrbitParm = "galileo/pws/cephemSun"; }
else
  { $sOrbitParm = "galileo/pws/cephemSun"; }
if( $sTitle eq "" ){$sTitle='Cassini RPWS Low Rate Full Calibration';}

$sOptions=$sRcvAnt." -a -base -b $nBgd ";  # -a correct for antenna resonance
                                           # -base correct for base capactance

if( $nBgd > 0 ){
  $yTitle="dB above background ($nBgd%)";
  $nColorMap=1;
}
else{
  if( $sOptions =~ /E[uvwxz]/ ){ 
    $yTitle = "V!E2 !Nm!E-2 !NHzE-1 !N"; 
    if( $sOptions =~ /B[xyz]/ ){ $yTitle = $yTitle." or nT!E2 !NHzE-1 !N"; }
  }
  elsif( $sOptions =~ /B[xyz]/ ){ 
    $yTitle = "nT!E2 !NHzE-1 !N"; 
  }
  else{
    $yTitle = "Calibrated Spectral Density";
  }
  $nColorMap=0;
}

#printf(STDERR "%.2f %.2f %.2g %.2g, bgd=%d\n",$yMin,$yMax,$zMin,$zMax,$nBgd);
#printf(STDERR "%s\n",$sOptions);
#printf(STDERR "title=%s\n",$sTitle);
#printf(STDERR "Ytitle=%s\n",$yTitle);
#exit(0);

# send the time and title information to IDL

&PrintCommon;

print PROG <<EOH;
axis(0).x.title = $xtitle
set(1).title = \'$sTitle\'
column(0).tleft = \'$ARGV[0]\'
column(0).tright = \'$ARGV[1]\'
row(0).ybottom = \'$yMin\'
row(0).ytop =    \'$yMax'\
colormap(0).zlow =  \'$zMin\'
colormap(0).zhigh = \'$zMax\'
axis(1).y.title = \'$yTitle\'
image(0).bgd = $nBgd
colormap(0).db = $nColorMap
image(0).query = \'$sOptions\'
axis(0).tca = \'$sOrbitParm\'
go
EOH

close(PROG);

exit(0);

sub PrintCommon {
print PROG <<EOH;
ON_ERROR, 1
CD, '/home/Web/das/idl/'
RESTORE, 'gifer.idl'
CD, '$gif_dir'
SET_PLOT, 'Z'
DEVICE, Z_BUFFER=0
.RUN /home/Web/das/idl/giferator.pro
batch = 1
display.color.r=interpolate([000,000,000,000,000,255,255,255,255],(findgen(200)+1.)/25.)
display.color.g=interpolate([000,000,255,255,255,255,200,080,000],(findgen(200)+1.)/25.)
display.color.b=interpolate([127,255,255,127,000,000,000,000,000],(findgen(200)+1.)/25.)
display.color.b(0)=1
  display.color.r=interpolate([000,000,000,000,000,255,255,255,255],(findgen(200)+1.)/25.)
  display.color.g=interpolate([000,000,255,255,255,255,200,080,000],(findgen(200)+1.)/25.)
  display.color.b=interpolate([127,255,255,127,000,000,000,000,000],(findgen(200)+1.)/25.)
  display.color.b(0)=1
rows = 2
columns = 2
colormaps = 1
images = 2
axes = 2
plots = 3
sets = 2
colormap_i.klow = 0
colormap_i.khigh = display.color.nz
set_i.ticklen = -0.03
axis_i.set = 0
axis_i.method = 'plot'

init
image(0).query = image(0).query + " -lfdr LExEz -mfr 123ExEz -hfr ABC12ExpExmEx -filter lfdr mfr hfr -n mfr3_hfra -n hf1_hfrc -ndp -car -base -b $bgd "
display.isize = 1024
display.jsize = 768
column(0).ileft = display.isize / 8
column(0).iright = display.isize * 6 / 8
column(0).time = 1
column(0).tleft = '2000-320T00:00:00'
column(0).tright = '2000-321T00:00:00'
column(1).ileft = column(0).iright + display.isize / 8
column(1).iright = column(1).ileft + display.isize / 32
row(0).jbottom = display.jsize * 2 / 10
row(0).jtop = display.jsize * 8 / 10
row(0).ybottom = 2
row(0).ytop = 16100000
row(0).log = 1
row(1) = row(0)
colormap(0).zlow = 0
colormap(0).zhigh = 20
colormap(0).log = 1
axis(0).row = 0
axis(0).column = 0
axis(0).timeaxis = 'x'
axis(0).x.title = '2000-11-15 (320) 00:00:00    SCET    2000-11-16 (321) 00:00:00'
axis(0).y.title = 'frequency (Hz)'
axis(0).set = 1
axis(1).row = 1
axis(1).column = 1
axis(1).x.style = supress
axis(1).y.ticklen = -0.3
axis(1).y.title = 'Spectral Density'
image(0).row = 0
image(0).column = 0
image(0).colormap = 0
#image(0).dataset = 'cassini/rpws/raj/RPWSspecPds'
image(0).dataset = 'cassini/rpws/raj/RPWSspecPds'
image(1).row = 1
image(1).column = 1
image(1).colormap = 0
image(1).dataset = 'color_wedge'
set(1).title = 'Cassini RPWS LRFC_FULL Ex LFDR MFR 123 HFR ABC12'
image(0).bgd = 0
colormap(0).db = 0
mfr3_hfrA_overlap = on
hfrC_hfr1_overlap = on
axis(0).tca = \'\'
plot(0).row = 0
plot(0).column = 0
plot(0).set = 0
plot(0).multi = 0
plot(0).color = display.color.offwhite
plot(0).thick = 2
plot(0).dataset = 'cassini/mag/fce'
plot(0).switch = 0
plot(1).row = 0
plot(1).column = 0
plot(1).set = 0
plot(1).multi = 0
plot(1).color = display.color.offwhite
plot(1).thick = 2
plot(1).dataset = 'galileo/pws/cfuh'
plot(1).switch = 0
plot(2).row = 0
plot(2).column = 0
plot(2).set = 0
plot(2).multi = 0
plot(2).color = display.color.offwhite
plot(2).thick = 2
plot(2).dataset = 'galileo/pws/cflh'
plot(2).switch = 0
device_name = 'Z'
gif_mime_header = 'image/gif'
ps_mime_header = 'application/postscript'
EOH
}
